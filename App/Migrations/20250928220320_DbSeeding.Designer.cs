// <auto-generated />
using System;
using App.Models.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace App.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250928220320_DbSeeding")]
    partial class DbSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("App.Models.Brand", b =>
                {
                    b.Property<int>("IdBrand")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idBrand");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdBrand"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("brandName");

                    b.HasKey("IdBrand");

                    b.HasIndex("BrandName")
                        .IsUnique();

                    b.HasIndex("IdBrand")
                        .IsUnique();

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            IdBrand = 1,
                            BrandName = "Ikea"
                        },
                        new
                        {
                            IdBrand = 2,
                            BrandName = "Mobalpa"
                        },
                        new
                        {
                            IdBrand = 3,
                            BrandName = "LeRoyMerlin"
                        },
                        new
                        {
                            IdBrand = 4,
                            BrandName = "Lego"
                        },
                        new
                        {
                            IdBrand = 5,
                            BrandName = "Playmobil"
                        },
                        new
                        {
                            IdBrand = 6,
                            BrandName = "Hasbro"
                        },
                        new
                        {
                            IdBrand = 7,
                            BrandName = "Apple"
                        },
                        new
                        {
                            IdBrand = 8,
                            BrandName = "Samsung"
                        },
                        new
                        {
                            IdBrand = 9,
                            BrandName = "Sony"
                        },
                        new
                        {
                            IdBrand = 10,
                            BrandName = "Nike"
                        },
                        new
                        {
                            IdBrand = 11,
                            BrandName = "Adidas"
                        },
                        new
                        {
                            IdBrand = 12,
                            BrandName = "Puma"
                        },
                        new
                        {
                            IdBrand = 13,
                            BrandName = "Paypal"
                        });
                });

            modelBuilder.Entity("App.Models.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idProduct");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProduct"));

                    b.Property<int>("ActualStock")
                        .HasColumnType("integer")
                        .HasColumnName("actualStock");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("description");

                    b.Property<int?>("IdBrand")
                        .HasColumnType("integer")
                        .HasColumnName("idBrand");

                    b.Property<int?>("IdTypeProduct")
                        .HasColumnType("integer")
                        .HasColumnName("idTypeProduct");

                    b.Property<int>("MaxStock")
                        .HasColumnType("integer")
                        .HasColumnName("maxStock");

                    b.Property<int>("MinStock")
                        .HasColumnType("integer")
                        .HasColumnName("minStock");

                    b.Property<string>("PhotoName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("photoName");

                    b.Property<string>("PhotoUri")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("photoUri");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("productName");

                    b.HasKey("IdProduct");

                    b.HasIndex("IdBrand");

                    b.HasIndex("IdProduct")
                        .IsUnique();

                    b.HasIndex("IdTypeProduct");

                    b.HasIndex("ProductName")
                        .IsUnique();

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            IdProduct = 1,
                            ActualStock = 10,
                            Description = "A comfortable corner sofa for your living room.",
                            IdBrand = 1,
                            IdTypeProduct = 1,
                            MaxStock = 20,
                            MinStock = 2,
                            PhotoName = "corner_sofa.jpg",
                            PhotoUri = "/images/corner_sofa.jpg",
                            ProductName = "Corner Sofa"
                        },
                        new
                        {
                            IdProduct = 2,
                            ActualStock = 15,
                            Description = "Coffee table made of solid wood.",
                            IdBrand = 1,
                            IdTypeProduct = 1,
                            MaxStock = 30,
                            MinStock = 3,
                            PhotoName = "coffee_table.jpg",
                            PhotoUri = "/images/coffee_table.jpg",
                            ProductName = "Coffee Table"
                        },
                        new
                        {
                            IdProduct = 3,
                            ActualStock = 5,
                            Description = "Modern kitchen with built-in storage.",
                            IdBrand = 2,
                            IdTypeProduct = 1,
                            MaxStock = 10,
                            MinStock = 1,
                            PhotoName = "kitchen.jpg",
                            PhotoUri = "/images/kitchen.jpg",
                            ProductName = "Fitted Kitchen"
                        },
                        new
                        {
                            IdProduct = 4,
                            ActualStock = 20,
                            Description = "Durable drill with long-lasting battery.",
                            IdBrand = 3,
                            IdTypeProduct = 1,
                            MaxStock = 50,
                            MinStock = 5,
                            PhotoName = "drill.jpg",
                            PhotoUri = "/images/drill.jpg",
                            ProductName = "Cordless Drill"
                        },
                        new
                        {
                            IdProduct = 5,
                            ActualStock = 25,
                            Description = "Lego Star Wars collector's set.",
                            IdBrand = 4,
                            IdTypeProduct = 2,
                            MaxStock = 40,
                            MinStock = 5,
                            PhotoName = "lego_starwars.jpg",
                            PhotoUri = "/images/lego_starwars.jpg",
                            ProductName = "Lego Star Wars"
                        },
                        new
                        {
                            IdProduct = 6,
                            ActualStock = 30,
                            Description = "Lego City set for kids.",
                            IdBrand = 4,
                            IdTypeProduct = 2,
                            MaxStock = 60,
                            MinStock = 6,
                            PhotoName = "lego_city.jpg",
                            PhotoUri = "/images/lego_city.jpg",
                            ProductName = "Lego City"
                        },
                        new
                        {
                            IdProduct = 7,
                            ActualStock = 12,
                            Description = "Medieval Playmobil castle with figures.",
                            IdBrand = 5,
                            IdTypeProduct = 2,
                            MaxStock = 25,
                            MinStock = 2,
                            PhotoName = "playmobil_castle.jpg",
                            PhotoUri = "/images/playmobil_castle.jpg",
                            ProductName = "Playmobil Castle"
                        },
                        new
                        {
                            IdProduct = 8,
                            ActualStock = 40,
                            Description = "Classic Monopoly board game.",
                            IdBrand = 6,
                            IdTypeProduct = 2,
                            MaxStock = 80,
                            MinStock = 8,
                            PhotoName = "monopoly.jpg",
                            PhotoUri = "/images/monopoly.jpg",
                            ProductName = "Monopoly"
                        },
                        new
                        {
                            IdProduct = 9,
                            ActualStock = 50,
                            Description = "Latest iPhone model with OLED display.",
                            IdBrand = 7,
                            IdTypeProduct = 3,
                            MaxStock = 100,
                            MinStock = 10,
                            PhotoName = "iphone15.jpg",
                            PhotoUri = "/images/iphone15.jpg",
                            ProductName = "iPhone 15"
                        },
                        new
                        {
                            IdProduct = 10,
                            ActualStock = 20,
                            Description = "High performance laptop.",
                            IdBrand = 7,
                            IdTypeProduct = 3,
                            MaxStock = 30,
                            MinStock = 5,
                            PhotoName = "macbook.jpg",
                            PhotoUri = "/images/macbook.jpg",
                            ProductName = "MacBook Pro"
                        },
                        new
                        {
                            IdProduct = 11,
                            ActualStock = 45,
                            Description = "Samsung high-end smartphone.",
                            IdBrand = 8,
                            IdTypeProduct = 3,
                            MaxStock = 90,
                            MinStock = 8,
                            PhotoName = "galaxy_s24.jpg",
                            PhotoUri = "/images/galaxy_s24.jpg",
                            ProductName = "Galaxy S24"
                        },
                        new
                        {
                            IdProduct = 12,
                            ActualStock = 18,
                            Description = "High-definition QLED television.",
                            IdBrand = 8,
                            IdTypeProduct = 3,
                            MaxStock = 25,
                            MinStock = 3,
                            PhotoName = "qled_tv.jpg",
                            PhotoUri = "/images/qled_tv.jpg",
                            ProductName = "QLED TV 55\""
                        },
                        new
                        {
                            IdProduct = 13,
                            ActualStock = 35,
                            Description = "Next-generation gaming console.",
                            IdBrand = 9,
                            IdTypeProduct = 3,
                            MaxStock = 50,
                            MinStock = 7,
                            PhotoName = "ps5.jpg",
                            PhotoUri = "/images/ps5.jpg",
                            ProductName = "PlayStation 5"
                        },
                        new
                        {
                            IdProduct = 14,
                            ActualStock = 25,
                            Description = "Wireless headphones with noise cancellation.",
                            IdBrand = 9,
                            IdTypeProduct = 3,
                            MaxStock = 40,
                            MinStock = 5,
                            PhotoName = "sony_wh1000xm5.jpg",
                            PhotoUri = "/images/sony_wh1000xm5.jpg",
                            ProductName = "Sony WH-1000XM5 Headphones"
                        },
                        new
                        {
                            IdProduct = 15,
                            ActualStock = 30,
                            Description = "Iconic sports shoes.",
                            IdBrand = 10,
                            IdTypeProduct = 4,
                            MaxStock = 50,
                            MinStock = 5,
                            PhotoName = "airmax.jpg",
                            PhotoUri = "/images/airmax.jpg",
                            ProductName = "Air Max"
                        },
                        new
                        {
                            IdProduct = 16,
                            ActualStock = 25,
                            Description = "Classic Adidas sneakers.",
                            IdBrand = 11,
                            IdTypeProduct = 4,
                            MaxStock = 40,
                            MinStock = 5,
                            PhotoName = "stansmith.jpg",
                            PhotoUri = "/images/stansmith.jpg",
                            ProductName = "Stan Smith"
                        },
                        new
                        {
                            IdProduct = 17,
                            ActualStock = 20,
                            Description = "Iconic Puma Suede sneakers.",
                            IdBrand = 12,
                            IdTypeProduct = 4,
                            MaxStock = 30,
                            MinStock = 4,
                            PhotoName = "puma_suede.jpg",
                            PhotoUri = "/images/puma_suede.jpg",
                            ProductName = "Puma Suede"
                        },
                        new
                        {
                            IdProduct = 18,
                            ActualStock = 100,
                            Description = "Digital gift card usable everywhere.",
                            IdBrand = 13,
                            IdTypeProduct = 5,
                            MaxStock = 200,
                            MinStock = 20,
                            PhotoName = "paypal_gift.jpg",
                            PhotoUri = "/images/paypal_gift.jpg",
                            ProductName = "PayPal Gift Card"
                        });
                });

            modelBuilder.Entity("App.Models.TypeProduct", b =>
                {
                    b.Property<int>("IdTypeProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idTypeProduct");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTypeProduct"));

                    b.Property<string>("TypeProductName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("typeProductName");

                    b.HasKey("IdTypeProduct");

                    b.HasIndex("IdTypeProduct")
                        .IsUnique();

                    b.HasIndex("TypeProductName")
                        .IsUnique();

                    b.ToTable("TypeProduct");

                    b.HasData(
                        new
                        {
                            IdTypeProduct = 1,
                            TypeProductName = "Home"
                        },
                        new
                        {
                            IdTypeProduct = 2,
                            TypeProductName = "Toys"
                        },
                        new
                        {
                            IdTypeProduct = 3,
                            TypeProductName = "Electronics"
                        },
                        new
                        {
                            IdTypeProduct = 4,
                            TypeProductName = "Clothes"
                        },
                        new
                        {
                            IdTypeProduct = 5,
                            TypeProductName = "Other"
                        });
                });

            modelBuilder.Entity("App.Models.Product", b =>
                {
                    b.HasOne("App.Models.Brand", "NavigationBrand")
                        .WithMany("Products")
                        .HasForeignKey("IdBrand")
                        .HasConstraintName("FK_product_brand");

                    b.HasOne("App.Models.TypeProduct", "NavigationTypeProduct")
                        .WithMany("Products")
                        .HasForeignKey("IdTypeProduct")
                        .HasConstraintName("FK_product_type");

                    b.Navigation("NavigationBrand");

                    b.Navigation("NavigationTypeProduct");
                });

            modelBuilder.Entity("App.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("App.Models.TypeProduct", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
